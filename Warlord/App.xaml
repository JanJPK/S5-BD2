<Application x:Class="Warlord.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Warlord"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             Startup="Application_Startup"
             DispatcherUnhandledException="App_OnDispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />

                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Green.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />

                <!-- Controls -->
                <!-- Margin="left,top,right,bottom" -->

                <ResourceDictionary>
                    <Style x:Key="NaviItemContainerStyle" TargetType="ContentPresenter">
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="Margin" Value="2" />
                    </Style>

                    <DataTemplate x:Key="NaviItemTemplate">
                        <Border BorderThickness="1" BorderBrush="#3f3f3f">
                            <Button Content="{Binding DisplayMember}"
                                    Command="{Binding OpenDetailViewCommand}"
                                    FontSize="24"
                                    Margin="10 0 10 2">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">

                                        <Grid x:Name="grid">
                                            <ContentPresenter />
                                        </Grid>

                                        <!-- Mouse responses -->
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                                <Setter Property="Foreground" Value="#548e19" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        
                    </DataTemplate>

                    <DataTemplate x:Key="OrderAddedVehicleTemplate">
                        <StackPanel Orientation="Horizontal"
                                    Margin="10 0 10 0">
                            <TextBlock Text="{Binding DisplayMember}"
                                       FontSize="24"
                                       Margin="0 0 0 0"/>
                            <Button Content="[Vehicle details]"
                                    Command="{Binding OpenDetailViewCommand}"
                                    FontSize="24"
                                    Margin="10 0 0 0">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">

                                        <Grid x:Name="grid">
                                            <ContentPresenter />
                                        </Grid>

                                        <!-- Mouse responses -->
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                                <Setter Property="Foreground" Value="#548e19" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>

                    </DataTemplate>

                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="FontSize" Value="20" />
                    </Style>

                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Margin" Value="10 10 10 10"></Setter>
                    </Style>

                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="FontSize" Value="20" />
                        <Setter Property="Margin" Value="10 10 10 10" />
                    </Style>

                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="FontSize" Value="20" />
                        <Setter Property="Foreground" Value="#CCCCCC" />
                        <Setter Property="Margin" Value="10 10 0 10" />
                    </Style>

                    <Style TargetType="xctk:DateTimePicker">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Margin" Value="10 10 10 10" />
                        <Setter Property="FontSize" Value="20" />
                    </Style>

                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="FontSize" Value="20" />
                        <Setter Property="Margin" Value="10 10 10 10" />
                        <!-- Error message under TextBox -->
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="placeholder" />
                                        <TextBlock FontSize="12" Foreground="White"
                                                   Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!-- Error message in mouse over tooltip -->
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="DarkRed" />
                                <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DataGridColumnStyle" TargetType="TextBlock">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="DarkRed" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DataGridEditingColumnStyle" TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="DarkRed" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>